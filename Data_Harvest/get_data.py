import openpyxl, sys, os, threading, time
from .classes import site_new, site_old, site_sh

def get_root():
	past_root = os.getcwd()
	os.chdir('../..')
	root = os.getcwd()+'/'
	os.chdir(past_root)
	return root

ROOT = get_root()
OUTPUT = ROOT+'CSVs/autogenerated_summary.csv'
DUPES = ROOT+'CSVs/dupes.csv'

def write_to_file(sites):
	open(DUPES,'w').close()
	open(OUTPUT, 'w').close()
	
	[print(str(s),end='') for s in sites]
	with open(OUTPUT, 'a') as file:
		[file.write(str(s)) for s in sites]

def get_information(path):
	wb = openpyxl.load_workbook(filename=path, \
								read_only=True, \
								data_only=True)
	if not wb['Site Info']['E3'].value:		# is old survey
		print('    { OLD }')
		return site_old(wb)
	if wb[wb.sheetnames[1]]['K47'].value:	# is sh/sslc survey
		print('    { SH/SSLC }')
		return site_sh(wb)
	print('    { NEW }')
	return site_new(wb)		# is current survey

def get_data(path, sites, items_added):
	time.sleep(1)
	print(path)
	valid_file = 'not os.path.isdir(file) and file.split(\'.\')[-1]==\'xlsx\' and file[:2]!=\'~$\''
	files = [file for file in os.listdir(path) if eval(valid_file)]
	for file in files:
		print(' ',file)
		s = get_information(path=path+'/'+file)
		key = (s.id, s.addr)
		if key not in items_added:	items_added[key] = 1
		else:
			items_added[key] += 1
			#s.id = s.id + '.0' + str(items_added[key]-1)
		sites.append((key, s))

def merge(lists):
	out = []
	for item in lists:
		out += item
	out.sort(key=lambda x: (x[0][0], x[0][1]))
	out = [o[1] for o in out]
	return out

def do_threading(PATHS):
	lists = [[] for path in PATHS]
	threads, items_added = [], {}
	for i in range(len(PATHS)):
		args = (PATHS[i], lists[i], items_added, )
		t = threading.Thread(target=get_data, args=args)
		t.start()
		t.join()
		threads.append(t)
	while sum([1 for t in threads if t.isAlive()]):
		time.sleep(.05)
	return merge(lists)

def get_all_data():	
	PATHS = [ROOT+'Surveys/'+arg for arg in sys.argv[1:]]
	sites = do_threading(PATHS)
	write_to_file(sites)

if __name__ == '__main__':
	get_all_data()
